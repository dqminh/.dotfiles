#!/bin/bash
set -e

CMD=$1
GO_VERSION=1.8
NEOVIM_VERSION=0.1.7

install_packages() {
  sudo apt install -y \
    autoconf \
    automake \
    apt-transport-https \
    build-essential \
    cmake \
    cmake \
    g++ \
    git \
    htop \
    libtool \
    libtool-bin \
    mercurial \
    openconnect \
    pkg-config \
    jq \
    rofi \
    curl \
    wget \
    python-pip \
    python3-pip \
    i3 \
    i3lock \
    i3status \
    scrot \
    feh \
    stow \
    libgtk-3-dev \
    tmux \
    unzip \
    xbacklight \
    xclip \
    zsh
}

install_neovim() {
  rm -rf /tmp/neovim*
  wget https://github.com/neovim/neovim/archive/v${NEOVIM_VERSION}.tar.gz -O /tmp/neovim.tar.gz && \
    tar -C /tmp -xzf /tmp/neovim.tar.gz && \
    cd /tmp/neovim-${NEOVIM_VERSION} && \
    make CMAKE_BUILD_TYPE=Release && \
    sudo make install && \
    cd /tmp && \
    rm -rf /tmp/neovim-${NEOVIM_VERSION} && \
    rm -rf /tmp/neovim.tar.gz
}

install_go() {
  if [[ ! `/usr/local/go/bin/go version` =~ "go${GO_VERSION}" ]]; then
    echo "install go ${GO_VERSION}"
    sudo rm -rf /usr/local/go
    wget https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz -O /tmp/go.tar.gz && \
      sudo tar -C /usr/local -xzf /tmp/go.tar.gz && \
      rm -rf /tmp/go.tar.gz
  fi
  (
  export PATH=/usr/local/go/bin:$PATH
  export GOPATH=$HOME
  export GOBIN=$HOME/bin
  go get -u github.com/nsf/gocode
  go get -u github.com/shurcooL/markdownfmt
  go get -u github.com/getantibody/antibody/cmd/antibody
  )
}

install_config() {
  stow user
}

install_system_config() {
  sudo cp system/etc/systemd/system/*.service /etc/systemd/system/
  # sudo cp system/lib/systemd/system-sleep/* /lib/systemd/system-sleep/
  sudo cp system/etc/default/* /etc/default

  sudo systemctl daemon-reload
  sudo systemctl enable fix-macbook.service
  sudo systemctl enable i3lock@dqminh
  # sudo systemctl enable ubuntu-wifi-resume.service
  sudo systemctl restart fix-macbook.service

  # make sure that we have persistent journal next reboot
  sudo mkdir -p /var/log/journal
}

install_fonts() {
  fc-cache -fv
}

main() {
  case $CMD in
    fonts)
      install_user
      install_fonts
      ;;
    system)
      install_system_config
      ;;
    packages)
      install_packages
      ;;
    go)
      install_go
      ;;
    nvim|neovim)
      install_neovim
      ;;
    *)
      install_config
      ;;
  esac
}

main
